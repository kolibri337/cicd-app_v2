stages:
  - build
  - lint
  - test
  - cleanup
  - push
  - deploy
  - vault

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID .

helm-lint:
  stage: lint
  image: centosadmin/kubernetes-helm:3.6.3
  script:
    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL
    - kubectl config set-credentials ci --token=$K8S_CI_TOKEN
    - kubectl config set-context ci --cluster=k8s --user=ci
    - kubectl config use-context ci
    - helm lint .helm

docker-lint:
  stage: lint
  image: alpine:latest
  script:
    - apk add --no-cache curl
    - curl -sSfL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
    - chmod +x /usr/local/bin/hadolint
    - hadolint Dockerfile

test:
  stage: test
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - docker-compose 
        -p "$CI_PROJECT_NAME"_"$CI_PIPELINE_ID"
      up
        --abort-on-container-exit
        --exit-code-from test
        --quiet-pull

cleanup:
  stage: cleanup
  image:
    name: docker/compose:1.29.2
    entrypoint: [""]
  script:
    - docker-compose -p "$CI_PROJECT_NAME"_"$CI_PIPELINE_ID" down
  when: always

push:
  stage: push
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
  only:
    - main


get_secrets:
  id_tokens:
    ID_TOKEN_1:
      aud: http://vault.s075269.edu.slurm.io
  stage: vault
  image: vault:1.7.5
  script:
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_COMMIT_REF_PROTECTED
    - export VAULT_ADDR=http://vault.s075269.edu.slurm.io
    - export VAULT_TOKEN="$(vault write -tls-skip-verify -field=token auth/jwt/login role=myproject-production jwt=$ID_TOKEN_1)"
    - export STAGING_PASSWORD="$(vault kv get -tls-skip-verify -field=password secret/myproject/staging/db)"
    - echo $STAGING_PASSWORD
    - export PASSWORD="$(vault kv get -tls-skip-verify -field=password secret/myproject/production/db)"
    - echo $PASSWORD
